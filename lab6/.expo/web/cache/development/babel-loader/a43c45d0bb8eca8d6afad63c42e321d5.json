{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/home/fam3/CS-262/cs-262_labs/lab6/App.js\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React, { useEffect, useState } from 'react';\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nexport default function App() {\n  var _this = this;\n\n  var _useState = useState(true),\n      _useState2 = _slicedToArray(_useState, 2),\n      isLoading = _useState2[0],\n      setLoading = _useState2[1];\n\n  var _useState3 = useState([]),\n      _useState4 = _slicedToArray(_useState3, 2),\n      data = _useState4[0],\n      setData = _useState4[1];\n\n  var getMovies = function getMovies() {\n    var response, json;\n    return _regeneratorRuntime.async(function getMovies$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.prev = 0;\n            _context.next = 3;\n            return _regeneratorRuntime.awrap(fetch('https://www.googleapis.com/books/v1/volumes?q=jane%20austen'));\n\n          case 3:\n            response = _context.sent;\n            _context.next = 6;\n            return _regeneratorRuntime.awrap(response.json());\n\n          case 6:\n            json = _context.sent;\n            setData(json.items);\n            _context.next = 13;\n            break;\n\n          case 10:\n            _context.prev = 10;\n            _context.t0 = _context[\"catch\"](0);\n            console.error(_context.t0);\n\n          case 13:\n            _context.prev = 13;\n            setLoading(false);\n            return _context.finish(13);\n\n          case 16:\n            useEffect(function () {\n              getMovies();\n            }, []);\n            return _context.abrupt(\"return\", React.createElement(View, {\n              style: {\n                flex: 1,\n                padding: 24\n              },\n              __self: _this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 25,\n                columnNumber: 5\n              }\n            }, isLoading ? React.createElement(ActivityIndicator, {\n              __self: _this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 26,\n                columnNumber: 20\n              }\n            }) : React.createElement(FlatList, {\n              data: data,\n              keyExtractor: function keyExtractor(_ref, index) {\n                var id = _ref.id;\n                return id;\n              },\n              renderItem: function renderItem(_ref2) {\n                var item = _ref2.item;\n                return React.createElement(Text, {\n                  __self: _this,\n                  __source: {\n                    fileName: _jsxFileName,\n                    lineNumber: 31,\n                    columnNumber: 13\n                  }\n                }, item.volumeInfo, \", \", item.releaseYear);\n              },\n              __self: _this,\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 27,\n                columnNumber: 9\n              }\n            })));\n\n          case 18:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, [[0, 10, 13, 16]], Promise);\n  };\n}\n;","map":{"version":3,"sources":["/home/fam3/CS-262/cs-262_labs/lab6/App.js"],"names":["React","useEffect","useState","App","isLoading","setLoading","data","setData","getMovies","fetch","response","json","items","console","error","flex","padding","index","id","item","volumeInfo","releaseYear"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;;;;;AAIA,eAAe,SAASC,GAAT,GAAkB;AAAA;;AAC/B,kBAAgCD,QAAQ,CAAC,IAAD,CAAxC;AAAA;AAAA,MAAOE,SAAP;AAAA,MAAkBC,UAAlB;;AACA,mBAAwBH,QAAQ,CAAC,EAAD,CAAhC;AAAA;AAAA,MAAOI,IAAP;AAAA,MAAaC,OAAb;;AAEA,MAAMC,SAAS,GAAG,SAAZA,SAAY;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6CAESC,KAAK,CAAC,6DAAD,CAFd;;AAAA;AAERC,YAAAA,QAFQ;AAAA;AAAA,6CAGKA,QAAQ,CAACC,IAAT,EAHL;;AAAA;AAGRA,YAAAA,IAHQ;AAIdJ,YAAAA,OAAO,CAACI,IAAI,CAACC,KAAN,CAAP;AAJc;AAAA;;AAAA;AAAA;AAAA;AAMdC,YAAAA,OAAO,CAACC,KAAR;;AANc;AAAA;AAQdT,YAAAA,UAAU,CAAC,KAAD,CAAV;AARc;;AAAA;AAWlBJ,YAAAA,SAAS,CAAC,YAAM;AACdO,cAAAA,SAAS;AACV,aAFQ,EAEN,EAFM,CAAT;AAXkB,6CAgBhB,oBAAC,IAAD;AAAM,cAAA,KAAK,EAAE;AAAEO,gBAAAA,IAAI,EAAE,CAAR;AAAWC,gBAAAA,OAAO,EAAE;AAApB,eAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eACGZ,SAAS,GAAG,oBAAC,iBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAAH,GACR,oBAAC,QAAD;AACE,cAAA,IAAI,EAAEE,IADR;AAEE,cAAA,YAAY,EAAE,4BAASW,KAAT;AAAA,oBAAGC,EAAH,QAAGA,EAAH;AAAA,uBAAmBA,EAAnB;AAAA,eAFhB;AAGE,cAAA,UAAU,EAAE;AAAA,oBAAGC,IAAH,SAAGA,IAAH;AAAA,uBACV,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAAOA,IAAI,CAACC,UAAZ,QAA0BD,IAAI,CAACE,WAA/B,CADU;AAAA,eAHd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFJ,CAhBgB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAlB;AA4BD;AAAA","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { ActivityIndicator, FlatList, Text, View } from 'react-native';\n\n\nexport default function App  ()  {\n  const [isLoading, setLoading] = useState(true);\n  const [data, setData] = useState([]);\n\n  const getMovies = async () => {\n     try {\n      const response = await fetch('https://www.googleapis.com/books/v1/volumes?q=jane%20austen');\n      const json = await response.json();\n      setData(json.items);\n    } catch (error) {\n      console.error(error);\n    } finally {\n      setLoading(false);\n    }\n\n  useEffect(() => {\n    getMovies();\n  }, []);\n\n  return (\n    <View style={{ flex: 1, padding: 24 }}>\n      {isLoading ? <ActivityIndicator/> : (\n        <FlatList\n          data={data}\n          keyExtractor={({ id }, index) => id}\n          renderItem={({ item }) => (\n            <Text>{item.volumeInfo}, {item.releaseYear}</Text>\n          )}\n        />\n      )}\n    </View>\n  )};\n};"]},"metadata":{},"sourceType":"module"}