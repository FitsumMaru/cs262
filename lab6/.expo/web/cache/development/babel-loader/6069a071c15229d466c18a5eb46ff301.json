{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"/home/fam3/CS-262/cs-262_labs/lab6/App.js\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from 'react';\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\n\nvar App = function (_Component) {\n  _inherits(App, _Component);\n\n  var _super = _createSuper(App);\n\n  function App(props) {\n    var _this;\n\n    _classCallCheck(this, App);\n\n    _this = _super.call(this, props);\n    _this.state = {\n      data: [],\n      isLoading: true\n    };\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"getMovies\",\n    value: function getMovies() {\n      var response, json;\n      return _regeneratorRuntime.async(function getMovies$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.prev = 0;\n              _context.next = 3;\n              return _regeneratorRuntime.awrap(fetch('https://www.googleapis.com/books/v1/volumes?q=jane%20austen.json'));\n\n            case 3:\n              response = _context.sent;\n              _context.next = 6;\n              return _regeneratorRuntime.awrap(response.json());\n\n            case 6:\n              json = _context.sent;\n              this.setState({\n                data: json.movies\n              });\n              _context.next = 13;\n              break;\n\n            case 10:\n              _context.prev = 10;\n              _context.t0 = _context[\"catch\"](0);\n              console.log(_context.t0);\n\n            case 13:\n              _context.prev = 13;\n              this.setState({\n                isLoading: false\n              });\n              return _context.finish(13);\n\n            case 16:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, this, [[0, 10, 13, 16]], Promise);\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.getMovies();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$state = this.state,\n          data = _this$state.data,\n          isLoading = _this$state.isLoading;\n      return React.createElement(View, {\n        style: {\n          flex: 1,\n          padding: 24\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 7\n        }\n      }, isLoading ? React.createElement(ActivityIndicator, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 22\n        }\n      }) : React.createElement(FlatList, {\n        data: data,\n        keyExtractor: function keyExtractor(_ref, index) {\n          var id = _ref.id;\n          return id;\n        },\n        renderItem: function renderItem(_ref2) {\n          var item = _ref2.item;\n          return React.createElement(Text, {\n            __self: _this2,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 40,\n              columnNumber: 15\n            }\n          }, item.title, \", \", item.releaseYear);\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 11\n        }\n      }));\n    }\n  }]);\n\n  return App;\n}(Component);\n\nexport { App as default };\n;","map":{"version":3,"sources":["/home/fam3/CS-262/cs-262_labs/lab6/App.js"],"names":["React","Component","App","props","state","data","isLoading","fetch","response","json","setState","movies","console","log","getMovies","flex","padding","index","id","item","title","releaseYear"],"mappings":";;;;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;;;;;;IAGqBC,G;;;;;AACnB,eAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACjB,8BAAMA,KAAN;AAEA,UAAKC,KAAL,GAAa;AACXC,MAAAA,IAAI,EAAE,EADK;AAEXC,MAAAA,SAAS,EAAE;AAFA,KAAb;AAHiB;AAOlB;;;;WAED;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+CAE2BC,KAAK,CAAC,kEAAD,CAFhC;;AAAA;AAEUC,cAAAA,QAFV;AAAA;AAAA,+CAGuBA,QAAQ,CAACC,IAAT,EAHvB;;AAAA;AAGUA,cAAAA,IAHV;AAII,mBAAKC,QAAL,CAAc;AAAEL,gBAAAA,IAAI,EAAEI,IAAI,CAACE;AAAb,eAAd;AAJJ;AAAA;;AAAA;AAAA;AAAA;AAMIC,cAAAA,OAAO,CAACC,GAAR;;AANJ;AAAA;AAQI,mBAAKH,QAAL,CAAc;AAAEJ,gBAAAA,SAAS,EAAE;AAAb,eAAd;AARJ;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;WAYA,6BAAoB;AAClB,WAAKQ,SAAL;AACD;;;WAED,kBAAS;AAAA;;AACP,wBAA4B,KAAKV,KAAjC;AAAA,UAAQC,IAAR,eAAQA,IAAR;AAAA,UAAcC,SAAd,eAAcA,SAAd;AAEA,aACE,oBAAC,IAAD;AAAM,QAAA,KAAK,EAAE;AAAES,UAAAA,IAAI,EAAE,CAAR;AAAWC,UAAAA,OAAO,EAAE;AAApB,SAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACGV,SAAS,GAAG,oBAAC,iBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAH,GACR,oBAAC,QAAD;AACE,QAAA,IAAI,EAAED,IADR;AAEE,QAAA,YAAY,EAAE,4BAASY,KAAT;AAAA,cAAGC,EAAH,QAAGA,EAAH;AAAA,iBAAmBA,EAAnB;AAAA,SAFhB;AAGE,QAAA,UAAU,EAAE;AAAA,cAAGC,IAAH,SAAGA,IAAH;AAAA,iBACV,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAAOA,IAAI,CAACC,KAAZ,QAAqBD,IAAI,CAACE,WAA1B,CADU;AAAA,SAHd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFJ,CADF;AAaD;;;;EA1C8BpB,S;;SAAZC,G;AA2CpB","sourcesContent":["import React, { Component } from 'react';\nimport { ActivityIndicator, FlatList, Text, View } from 'react-native';\n\nexport default class App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      data: [],\n      isLoading: true\n    };\n  }\n\n  async getMovies() {\n    try {\n      const response = await fetch('https://www.googleapis.com/books/v1/volumes?q=jane%20austen.json');\n      const json = await response.json();\n      this.setState({ data: json.movies });\n    } catch (error) {\n      console.log(error);\n    } finally {\n      this.setState({ isLoading: false });\n    }\n  }\n\n  componentDidMount() {\n    this.getMovies();\n  }\n\n  render() {\n    const { data, isLoading } = this.state;\n\n    return (\n      <View style={{ flex: 1, padding: 24 }}>\n        {isLoading ? <ActivityIndicator/> : (\n          <FlatList\n            data={data}\n            keyExtractor={({ id }, index) => id}\n            renderItem={({ item }) => (\n              <Text>{item.title}, {item.releaseYear}</Text>\n            )}\n          />\n        )}\n      </View>\n    );\n  }\n};"]},"metadata":{},"sourceType":"module"}