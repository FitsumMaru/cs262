{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/home/fam3/CS-262/cs-262_labs/lab6/App.js\";\n\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport { globalStyles } from \"./styles/global\";\nimport React, { useEffect, useState } from 'react';\nimport Button from \"react-native-web/dist/exports/Button\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport FlatList from \"react-native-web/dist/exports/FlatList\";\nimport { NavigationContainer } from '@react-navigation/native';\nimport { createNativeStackNavigator } from '@react-navigation/native-stack';\nimport HomeScreen from \"./screens/home\";\nimport DetailsScreen from \"./screens/detailsscreen\";\nimport About from \"./screens/about\";\nvar Stack = createNativeStackNavigator();\nexport default App = function App() {\n  var _useState = useState(true),\n      _useState2 = _slicedToArray(_useState, 2),\n      isLoading = _useState2[0],\n      setLoading = _useState2[1];\n\n  var _useState3 = useState([]),\n      _useState4 = _slicedToArray(_useState3, 2),\n      data = _useState4[0],\n      setData = _useState4[1];\n\n  var getMovies = function getMovies() {\n    var response, json;\n    return _regeneratorRuntime.async(function getMovies$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.prev = 0;\n            _context.next = 3;\n            return _regeneratorRuntime.awrap(fetch('https://reactnative.dev/movies.json'));\n\n          case 3:\n            response = _context.sent;\n            _context.next = 6;\n            return _regeneratorRuntime.awrap(response.json());\n\n          case 6:\n            json = _context.sent;\n            setData(json.movies);\n            _context.next = 13;\n            break;\n\n          case 10:\n            _context.prev = 10;\n            _context.t0 = _context[\"catch\"](0);\n            console.error(_context.t0);\n\n          case 13:\n            _context.prev = 13;\n            setLoading(false);\n            return _context.finish(13);\n\n          case 16:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, [[0, 10, 13, 16]], Promise);\n  };\n\n  useEffect(function () {\n    getMovies();\n  }, []);\n  return React.createElement(View, {\n    style: {\n      flex: 1,\n      padding: 24\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 5\n    }\n  }, isLoading ? React.createElement(ActivityIndicator, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 20\n    }\n  }) : React.createElement(FlatList, {\n    data: data,\n    keyExtractor: function keyExtractor(_ref, index) {\n      var id = _ref.id;\n      return id;\n    },\n    renderItem: function renderItem(_ref2) {\n      var item = _ref2.item;\n      return React.createElement(Text, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 13\n        }\n      }, item.title, \", \", item.releaseYear);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 9\n    }\n  }));\n};\n\nfunction App() {\n  var _this2 = this;\n\n  return React.createElement(NavigationContainer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 5\n    }\n  }, React.createElement(Stack.Navigator, {\n    initialRouteName: \"Home\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }\n  }, React.createElement(Stack.Screen, {\n    name: \"Home\",\n    component: HomeScreen,\n    options: function options(_ref3) {\n      var navigation = _ref3.navigation;\n      return {\n        headerRight: function headerRight() {\n          return React.createElement(Header, {\n            navigation: navigation,\n            __self: _this2,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 55,\n              columnNumber: 9\n            }\n          });\n        }\n      };\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 9\n    }\n  }), React.createElement(Stack.Screen, {\n    name: \"Details\",\n    component: DetailsScreen,\n    options: function options(_ref4) {\n      var navigation = _ref4.navigation;\n      return {\n        headerRight: function headerRight() {\n          return React.createElement(Header, {\n            navigation: navigation,\n            __self: _this2,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 61,\n              columnNumber: 9\n            }\n          });\n        }\n      };\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 9\n    }\n  }), React.createElement(Stack.Screen, {\n    name: \"About\",\n    component: About,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 9\n    }\n  })));\n}","map":{"version":3,"sources":["/home/fam3/CS-262/cs-262_labs/lab6/App.js"],"names":["globalStyles","React","useEffect","useState","NavigationContainer","createNativeStackNavigator","HomeScreen","DetailsScreen","About","Stack","App","isLoading","setLoading","data","setData","getMovies","fetch","response","json","movies","console","error","flex","padding","index","id","item","title","releaseYear","navigation","headerRight"],"mappings":"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","sourcesContent":["import { globalStyles } from './styles/global';\nimport React, { useEffect, useState } from 'react';\nimport { Button, View, Text, TouchableOpacity, FlatList } from 'react-native';\nimport { NavigationContainer } from '@react-navigation/native';\nimport { createNativeStackNavigator } from '@react-navigation/native-stack';\nimport HomeScreen from \"./screens/home\";\nimport DetailsScreen from \"./screens/detailsscreen\";\nimport About from \"./screens/about\";\n\nconst Stack = createNativeStackNavigator();\n\n\n\nexport default App = () => {\n  const [isLoading, setLoading] = useState(true);\n  const [data, setData] = useState([]);\n\n  const getMovies = async () => {\n     try {\n      const response = await fetch('https://reactnative.dev/movies.json');\n      const json = await response.json();\n      setData(json.movies);\n    } catch (error) {\n      console.error(error);\n    } finally {\n      setLoading(false);\n    }\n  }\n\n  useEffect(() => {\n    getMovies();\n  }, []);\n\n  return (\n    <View style={{ flex: 1, padding: 24 }}>\n      {isLoading ? <ActivityIndicator/> : (\n        <FlatList\n          data={data}\n          keyExtractor={({ id }, index) => id}\n          renderItem={({ item }) => (\n            <Text>{item.title}, {item.releaseYear}</Text>\n          )}\n        />\n      )}\n    </View>\n  );\n};\n\nfunction App() {\n  return (\n    <NavigationContainer>\n      <Stack.Navigator initialRouteName=\"Home\">\n        <Stack.Screen name=\"Home\" component={HomeScreen} options={({ navigation }) => ({\n    headerRight: () => (\n        <Header navigation={navigation}/>\n    )\n})}\n />\n        <Stack.Screen name=\"Details\" component={DetailsScreen} options={({ navigation }) => ({\n    headerRight: () => (\n        <Header navigation={navigation}/>\n    )\n})}\n/>\n        <Stack.Screen name=\"About\" component={About}  />\n      </Stack.Navigator>\n    </NavigationContainer>\n  );\n}\n\n"]},"metadata":{},"sourceType":"module"}